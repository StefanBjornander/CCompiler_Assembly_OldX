namespace CCompiler {
  public enum AssemblyOperator {
    set_track_size,
    new_code,
    add,
    add_byte,
    add_dword,
    add_word,
    address_return,
    and,
    and_byte,
    and_dword,
    and_word,
    call,
    cmp,
    cmp_byte,
    cmp_dword,
    cmp_word,
    comment,
    dec,
    dec_byte,
    dec_dword,
    dec_word,
    define_address,
    define_value,
    define_zero_sequence,
    div,
    div_byte,
    div_dword,
    div_word,
    empty,
    fabs,
    fadd,
    faddp,
    fchs,
    fcompp,
    fdiv,
    fdivp,
    fdivr,
    fdivrp,
    fild_dword,
    fild_word,
    fist_dword,
    fist_word,
    fistp_dword,
    fistp_word,
    fld1,
    fld_dword,
    fld_qword,
    fldcw,
    fldz,
    fmul,
    fmulp,
    fst_dword,
    fst_qword,
    fstcw,
    fstp_dword,
    fstp_qword,
    fstsw,
    fsub,
    fsubp,
    fsubr,
    fsubrp,
    ftst,
    idiv,
    idiv_byte,
    idiv_dword,
    idiv_word,
    imul,
    imul_byte,
    imul_dword,
    imul_word,
    inc,
    inc_byte,
    inc_dword,
    inc_word,
    interrupt,
    ja,
    jae,
    jb,
    jbe,
    jc,
    je,
    jg,
    jge,
    jl,
    jle,
    jmp,
    jnc,
    jne,
    jnz,
    jz,
    label,
    lahf,
    long_ja,
    long_jae,
    long_jb,
    long_jbe,
    long_jc,
    long_je,
    long_jg,
    long_jge,
    long_jl,
    long_jle,
    long_jmp,
    long_jnc,
    long_jne,
    long_jnz,
    long_jz,
    mov,
    mov_byte,
    mov_dword,
    mov_word,
    mul,
    mul_byte,
    mul_dword,
    mul_word,
    neg,
    neg_byte,
    neg_dword,
    neg_word,
    nop,
    not,
    not_byte,
    not_dword,
    not_word,
    or,
    or_byte,
    or_dword,
    or_word,
    register_return,
    ret,
    sahf,
    setTrackSize,
    //set_track_size,
    shl,
    shl_byte,
    shl_dword,
    shl_word,
    short_ja,
    short_jae,
    short_jb,
    short_jbe,
    short_jc,
    short_je,
    short_jg,
    short_jge,
    short_jl,
    short_jle,
    short_jmp,
    short_jnc,
    short_jne,
    short_jnz,
    short_jz,
    shr,
    shr_byte,
    shr_dword,
    shr_word,
    sub,
    sub_byte,
    sub_dword,
    sub_word,
    xor,
    xor_byte,
    xor_dword,
    xor_word
  };
};
