function start asin
push float v
push 1
if v == 1 goto <MiddleCode>
goto <MiddleCode>
push float 3.1415926535897932384
pop float empty X
push float 6.2831853071795864768
return_value = 6.2831853071795864768
return
goto <MiddleCode>
push float v
push float -1
if v == -1 goto <MiddleCode>
goto <MiddleCode>
push float 3.1415926535897932384
pop float empty X
push float -3.1415926535897932384
pop float empty X
push float -6.2831853071795864768
return_value = -6.2831853071795864768
return
goto <MiddleCode>
call header
push float v
parameter v, record 0, offset 6
pre call
call function noellipse-noellipse fabs, record 0, extra 0
post call integral
post call floating
£temporary516 = return_value
push 1
if £temporary516 <= 1 goto <MiddleCode>
goto <MiddleCode>
push 1
pop float x_nplus1
push float x
pop float empty X
push float x_nplus1
top float x
pop float empty X
push float x_nplus1
pop float empty X
push float x
call header
push float x
parameter x, record 0, offset 6
pre call
call function noellipse-noellipse tan, record 0, extra 0
post call integral
post call floating
£temporary518 = return_value
£temporary519 = x - £temporary518
push float v
call header
push float x
parameter x, record 0, offset 6
pre call
call function noellipse-noellipse cos, record 0, extra 0
post call integral
post call floating
£temporary520 = return_value
£temporary521 = v / £temporary520
£temporary522 = £temporary519 + £temporary521
top float x_nplus1
pop float empty X
call header
push float x_nplus1
push float x
£temporary523 = x_nplus1 - x
parameter £temporary523, record 0, offset 6
pre call
call function noellipse-noellipse fabs, record 0, extra 0
post call integral
post call floating
£temporary524 = return_value
push float 0.000000001
if £temporary524 >= 0.000000001 goto <MiddleCode>
goto <MiddleCode>
goto <MiddleCode>
push float x_nplus1
return_value = x_nplus1
return
goto <MiddleCode>
errno = 6
push 0
return_value = 0
return
goto <MiddleCode>
goto <MiddleCode>
goto <MiddleCode>
empty
return
function end asin
